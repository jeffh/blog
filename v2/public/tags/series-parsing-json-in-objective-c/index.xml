<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Series: Parsing JSON in Objective-C on jeffhui.net</title>
    <link>http://localhost:1313/tags/series-parsing-json-in-objective-c/</link>
    <description>Recent content in Series: Parsing JSON in Objective-C on jeffhui.net</description>
    <generator>Hugo -- 0.134.3</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Nov 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/series-parsing-json-in-objective-c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parsing JSON in Objective-C - Part 2</title>
      <link>http://localhost:1313/2014/06-Parsing-JSON-in-Objective-C-Part-2.html</link>
      <pubDate>Sat, 08 Nov 2014 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2014/06-Parsing-JSON-in-Objective-C-Part-2.html</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This previously was on
&lt;a href=&#34;http://pivotallabs.com/parsing-json-objective-c-part-2/&#34;&gt;Pivotal Labs blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&#34;05-parsing-json-in-objective-c-part-1&#34;&gt;previous article&lt;/a&gt;, we used TDD to
parse JSON into our &lt;code&gt;Person&lt;/code&gt; model and refactored the code under test. In part
2, we&amp;rsquo;re going to refactor the code further to be more reusable and extendable.
All the code in this article will also be in the
&lt;a href=&#34;https://github.com/jeffh/ParsingJSON/&#34;&gt;same repository&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;redesign&#34;&gt;Redesign&lt;/h1&gt;
&lt;p&gt;The refactorings in the previous article were fairly straightforward and
mechanical. Ultimately, we’ll need to break apart different concerns of this
code. One approach would be to start with some questions:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parsing JSON in Objective-C - Part 1</title>
      <link>http://localhost:1313/2014/05-Parsing-JSON-in-Objective-C-Part-1.html</link>
      <pubDate>Fri, 24 Oct 2014 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/2014/05-Parsing-JSON-in-Objective-C-Part-1.html</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was original written on the
&lt;a href=&#34;http://pivotallabs.com/parsing-json-in-objective-c&#34;&gt;Pivotal Labs Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;JSON parsing is a frequent task for clients interfacing with any recent web API.
Those web services frequently vary in quality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is the API following a RESTful design pattern?&lt;/li&gt;
&lt;li&gt;Is it providing an object graph or just a single/collection of objects in the
JSON response?&lt;/li&gt;
&lt;li&gt;What are the data types of the fields being returned? Can they be relied upon?&lt;/li&gt;
&lt;li&gt;How much work are clients duplicating to work around the server (e.g. -
Performance, Business Logic, etc.)?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have full control of the resulting API endpoints, then it is easy to
build or fix the API to your client’s specific needs. Controlling the incidental
complexity can be challenging for APIs you do not control, or which have to
support a variety of clients.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
